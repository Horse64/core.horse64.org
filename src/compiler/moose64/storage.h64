## @module compiler.moose64.storage
# Copyright (c) 2025, ellie/@ell1e & Horse64's contributors
# (see AUTHORS.md).
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Alternatively, at your option, this file is offered under the Apache 2
# license, see accompanied LICENSE.md.

import compiler.ast as ast
import compiler.moose64.builtins as m64_builtins

func handle_node_storage_redirects(
        node, project_file=none) {
    const is_moose64 = yes
    if not m64_builtins.
            is_ast_node_referring_to_m64_builtin_assert(
                project_file, node,
                is_moose64=is_moose64) {
        return
    }
    assert(node.kind == ast.N_EXPR_IDREF or
        (node.kind == ast.N_EXPR_BINOP and
        node.optoken.str == "." and
        node.subexprs.len >= 2))
    var target_ref = m64_builtins.
        get_m64_debug_assert_func_storage_ref(
            "assert", project=project_file.project,
            is_moose64=is_moose64,
        )
    if node.kind == ast.N_EXPR_IDREF {
        node.ref = target_ref
    } elseif node.kind == ast.N_EXPR_BINOP {
        node.subexprs[2].ref = target_ref
    }
}

